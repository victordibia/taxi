{"version":3,"sources":["components/footer/Footer.jsx","components/header/Header.jsx","components/FareCalculator/LocationSelector/LocationSelector.jsx","components/FareCalculator/FareCalculator.jsx","components/Main.js","reportWebVitals.js","index.js"],"names":["Footer","className","style","zIndex","href","target","Header","aria-label","process","src","alt","exact","to","Option","Select","LocationSelector","props","zones","config","selections","selectedSourceZone","getter","source","selectedDestinationZone","destination","zonesList","map","data","i","value","index","length","id","defaultValue","showSearch","width","placeholder","optionFilterProp","onChange","row","setter","showTime","format","moment","nyZones","require","colorOpacity","colorList","isHovering","getDeckCursor","isDragging","FareCalculator","useState","setSelectedSourceZone","setSelectedDestinationZone","zoneData","features","x","hold","properties","push","zone","boroughs","uniqBy","borough","boroughColorMap","selectedColor","forEach","useEffect","document","title","getCursor","initialViewState","longitude","latitude","zoom","pitch","bearing","controller","onHover","e","layer","Boolean","arr","object","LocationID","tooltipitem","getElementById","top","y","left","classList","remove","textContent","background","processZoneHover","add","mapStyle","mapboxApiAccessToken","pickable","opacity","filled","lineWidthMinPixels","getFillColor","d","selected","getLineColor","getRadius","getLineWidth","onClick","Main","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.278bbf9a.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2019 Fast Forward Labs.\n * Written by Victor Dibia / Contact : https://github.com/victordibia\n * CaseQA - CaseQA: Question Answering on Large Datasets with BERT.\n * Licensed under the MIT License (the \"License\");\n * =============================================================================\n */\n\nimport React from \"react\";\nimport \"./footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"border-gray-200 border-l-0 border-r-0 border-b-0  border w-full\">\n      <div\n        style={{ zIndex: 999000 }}\n        className=\" container-fluid text-gray-500 text-sm w-full p-2\"\n      >\n        Made with <span className=\"text-red-500\">&#9829;</span> by{\" \"}\n        <a href=\"http://victordibia.com/\" target=\"blank\">\n          Victor Dibia\n        </a>\n        .\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","/**\n * @license\n * Copyright 2019 Fast Forward Labs.\n * Written by / Contact : https://github.com/victordibia\n * NeuralQA - NeuralQA: Question Answering on Large Datasets with BERT.\n * Licensed under the MIT License (the \"License\");\n * =============================================================================\n */\n\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./header.css\";\n\nconst Header = () => {\n  const appName = \"NYC Taxi Trip Advisor\";\n  const appDescription = \"Dataset for Automated Generation of Visualizations\";\n  return (\n    <div>\n      <div className=\"headermain\" aria-label={appDescription}>\n        <div className=\"  w-full  container-fluid   headerrow pl-1 \">\n          <div className=\"flex  h-full\">\n            <div className=\"h-full   flex flex-col justify-center mr-2 ml-2  \">\n              <a href={process.env.PUBLIC_URL + \"/#\"}>\n                <img\n                  className=\"headericon\"\n                  src={process.env.PUBLIC_URL + \"/images/icon.png\"}\n                  alt=\"NYC Taxi Advisor logo\"\n                />\n              </a>\n            </div>\n            <div className=\"apptitle  flex flex-col justify-center  mr-1\">\n              <div className=\"text-white  font-semibold text-sm  iblock mr-2 ml-1\">\n                {\" \"}\n                {appName}{\" \"}\n              </div>\n            </div>\n            <div className=\"h-full   flex  text-sm  navbarlinks \">\n              <NavLink exact to=\"/\">\n                Fare Calculator\n              </NavLink>\n            </div>\n            {/* <div className=\"h100   flex flexjustifycenter  navbarlinks \">\n              <NavLink exact to=\"/embeddings\">\n                Embeddings{\" \"}\n              </NavLink>\n            </div>\n            <div className=\"h100   flex flexjustifycenter  navbarlinks \">\n              <NavLink exact to=\"/livesearch\">\n                Live Search{\" \"}\n              </NavLink>\n            </div> */}\n          </div>\n        </div>\n      </div>\n      <div></div>\n      <div className=\"headerboost\"> </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import moment from \"moment\";\nimport { Select, DatePicker } from \"antd\";\n// import { loadJSONData } from \"../../helperfunctions/HelperFunctions\";\nconst { Option } = Select;\n\nconst LocationSelector = (props) => {\n  const zones = props.zones || [];\n  const zoneDropdownWidth = 250;\n\n  const config = props.selections.config;\n  const selectedSourceZone = config.getter.source;\n  const selectedDestinationZone = config.getter.destination;\n\n  const zonesList = zones.map((data, i) => {\n    return (\n      <Option value={data} key={\"locrow\" + i} index={i}>\n        {\" \"}\n        {data}{\" \"}\n      </Option>\n    );\n  });\n  return (\n    zones.length > 0 && (\n      <div className=\"mt-2 shadow  inline-block rounded   bg-gray-50   bg-opacity-100\">\n        <div\n          id=\"header\"\n          className=\"mb-2 bg-gray-300 rounded rounded-b-none text-sm font-semibold  py-3 px-4\"\n        >\n          {\" \"}\n          Specify Trip Details\n        </div>\n\n        <div id=\"body\" className=\"mb-2 p-4 pt-2\">\n          <div className=\"\">\n            <div className=\"text-xs mb-1 text-gray-500\">\n              {\" \"}\n              From: {zones[selectedSourceZone]}{\" \"}\n            </div>\n            <Select\n              id=\"sourcezone\"\n              defaultValue={zones[selectedSourceZone]}\n              showSearch\n              style={{ width: zoneDropdownWidth }}\n              placeholder=\"Select a Zone\"\n              optionFilterProp=\"children\"\n              onChange={(value, row) => {\n                config.setter.source(row.index);\n              }}\n            >\n              {zonesList}\n            </Select>\n          </div>\n\n          <div className=\"mt-3 mb-2\">\n            <div className=\"text-xs mb-1 text-gray-500\">\n              {\" \"}\n              To: {zones[selectedDestinationZone]}{\" \"}\n            </div>\n            <Select\n              id=\"destinationzone\"\n              defaultValue={zones[selectedDestinationZone]}\n              showSearch\n              style={{ width: zoneDropdownWidth }}\n              placeholder=\"Select a Zone\"\n              optionFilterProp=\"children\"\n              onChange={(value, row) => {\n                config.setter.destination(row.index);\n              }}\n            >\n              {zonesList}\n            </Select>\n          </div>\n\n          <div className=\"mt-3 \">\n            <div className=\"text-xs mb-1 text-gray-500\"> Trip Time</div>\n            <DatePicker\n              style={{ width: zoneDropdownWidth }}\n              showTime={{ format: \"HH:mm\" }}\n              defaultValue={moment()}\n              // onChange={onChange}\n              // onOk={onOk}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default LocationSelector;\n","import React, { useEffect, useState } from \"react\";\nimport \"./curate.css\";\n\nimport DeckGL from \"@deck.gl/react\";\nimport { GeoJsonLayer } from \"@deck.gl/layers\";\nimport { StaticMap } from \"react-map-gl\";\nimport { MapView } from \"@deck.gl/core\";\nimport uniqBy from \"lodash/uniqBy\";\nimport LocationSelector from \"./LocationSelector/LocationSelector\";\n\n// Set your mapbox access token here\nconst MAPBOX_ACCESS_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN;\nconst nyZones = require(\"../../data/nyzones.geo.json\");\n\nconst colorOpacity = 200;\nconst colorList = [\n  [239, 68, 68, colorOpacity],\n  [245, 158, 11, colorOpacity],\n  [16, 185, 129, colorOpacity],\n  [59, 130, 246, colorOpacity],\n  [139, 92, 246, colorOpacity],\n  [236, 72, 153, colorOpacity],\n];\n\nlet isHovering = false;\n\n// Change cursor to pointer on hover over a GeoJson Layer Tile\nfunction getDeckCursor({ isDragging }) {\n  return isDragging ? \"grabbing\" : isHovering ? \"pointer\" : \"grab\";\n}\n\nfunction arrayToRGB(arr) {\n  return (\n    \"rgba(\" + arr[0] + \",\" + arr[1] + \",\" + arr[2] + \",\" + arr[3] / 255 + \")\"\n  );\n}\n\nconst FareCalculator = () => {\n  const [selectedSourceZone, setSelectedSourceZone] = useState(0);\n  const [selectedDestinationZone, setSelectedDestinationZone] = useState(4);\n\n  let zoneData = [];\n  const zones = nyZones.features.map((x, i) => {\n    let hold = x;\n    hold.properties[\"selected\"] = false;\n    hold.properties[\"index\"] = i;\n    if (i === selectedSourceZone) {\n      hold.properties[\"selected\"] = true;\n      hold.properties[\"selectedas\"] = \"source\";\n    }\n    if (i === selectedDestinationZone) {\n      hold.properties[\"selected\"] = true;\n      hold.properties[\"selectedas\"] = \"destination\";\n    }\n\n    zoneData.push(hold);\n    return x.properties.zone;\n  });\n  const boroughs = uniqBy(nyZones.features.map((x) => x.properties.borough));\n\n  const boroughColorMap = {};\n  const selectedColor = [255, 255, 100, 230];\n  boroughs.forEach((x, i) => {\n    boroughColorMap[x] = colorList[i];\n  });\n\n  const selections = {\n    config: {\n      getter: {\n        source: selectedSourceZone,\n        destination: selectedDestinationZone,\n      },\n      setter: {\n        source: setSelectedSourceZone,\n        destination: setSelectedDestinationZone,\n      },\n    },\n  };\n\n  // Viewport settings\n  const INITIAL_VIEW_STATE = {\n    longitude: -73.935242,\n    latitude: 40.73061,\n    zoom: 10.0,\n    pitch: 0,\n    bearing: 0,\n  };\n\n  // console.log(zoneData, nyZones.features);\n\n  function processZoneHover(e) {\n    isHovering = Boolean(e);\n    const properties = e.object?.properties;\n    const id = properties?.LocationID;\n    if (id && properties?.borough) {\n      const tooltipitem = document.getElementById(\"tooltipitem\");\n      tooltipitem.style.top = e.y - 10 + \"px\";\n      tooltipitem.style.left = e.x + 15 + \"px\";\n\n      tooltipitem.classList.remove(\"hidden\");\n      document.getElementById(\"tooltipborough\").textContent =\n        properties?.borough;\n      document.getElementById(\"tooltipzone\").textContent = properties?.zone;\n      document.getElementById(\"tooltipbar\").style.background = arrayToRGB(\n        boroughColorMap[properties?.borough]\n      );\n    }\n  }\n\n  function deckHover(e) {\n    if (e.layer?.id === \"nyzones\") {\n      processZoneHover(e);\n    } else {\n      isHovering = false;\n      document.getElementById(\"tooltipitem\").classList.add(\"hidden\");\n    }\n  }\n\n  function zoneClick(e) {\n    // console.log(e.object.properties);\n    setSelectedDestinationZone(e.object.properties.index);\n  }\n\n  // console.log(zones.length, nyZones.features.length);\n\n  useEffect(() => {\n    document.title = `Taxi Advisor | Fare Prediction `;\n  }, []);\n\n  return (\n    <div className=\"\">\n      <div className=\"  \">\n        <DeckGL\n          getCursor={getDeckCursor}\n          initialViewState={INITIAL_VIEW_STATE}\n          controller={true}\n          onHover={deckHover}\n        >\n          <MapView id=\"map\" width=\"100%\" controller={true}>\n            <StaticMap\n              // style=\"dark-v10\"\n              mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n              mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n            />\n          </MapView>\n\n          <GeoJsonLayer\n            id=\"nyzones\"\n            data={zoneData}\n            pickable={true}\n            opacity={0.8}\n            // stroked={true}\n            filled={true}\n            // extruded={true}\n            // lineWidthScale={2}\n            lineWidthMinPixels={1}\n            getFillColor={(d) => {\n              if (d.properties.selected) {\n                return selectedColor;\n              }\n              return boroughColorMap[d.properties.borough];\n            }}\n            getLineColor={[243, 244, 246, 180]}\n            getRadius={100}\n            getLineWidth={1}\n            onClick={zoneClick}\n          />\n        </DeckGL>\n      </div>\n\n      <div\n        id=\"tooltipitem\"\n        className=\"hidden pointer-events-none absolute -left-10 p-3 shadow rounded-sm bg-white\"\n      >\n        {\" \"}\n        <div id=\"tooltipbar\" className={\"h-1 mb-1 bg-green-500\"}></div>\n        <div>\n          {\" \"}\n          <span className=\"font-semibold\"> Zone : </span>{\" \"}\n          <span id=\"tooltipzone\"> Queens Village </span>\n        </div>\n        <div>\n          {\" \"}\n          <span className=\"font-semibold\"> Borough : </span>{\" \"}\n          <span id=\"tooltipborough\"> Queens </span>\n        </div>\n      </div>\n\n      <div className=\"absolute ml-2 \">\n        <LocationSelector\n          zones={zones}\n          boroughs={boroughs}\n          selections={selections}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FareCalculator;\n","import \"./main.css\";\nimport \"antd/dist/antd.css\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport Footer from \"./footer/Footer\";\nimport Header from \"./header/Header\";\nimport FareCalculator from \"./FareCalculator/FareCalculator\";\n\nfunction Main() {\n  return (\n    <HashRouter>\n      <div className=\"flex flex-col h-screen  \">\n        <Header />\n        <main className=\"container-fluid w-full   flex-grow p-2\">\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => <FareCalculator {...props} />}\n          />\n        </main>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./components/Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}